{"version":3,"sources":["views/Introduction.js","components/charts/Bar.jsx","components/charts/Rose.jsx","utils/index.js","views/Citybike.jsx","components/general/Sider.js","Router.js","serviceWorker.js","index.js"],"names":["columns","title","dataIndex","key","tableData","name","type","option","description","listData","linkedin","github","email","Title","Text","Introduction","bordered","style","textAlign","orientation","size","dataSource","renderItem","item","Item","actions","href","Meta","marginTop","pagination","pageSize","scale","colors","Bar","data","day","React","useState","mounted","setMounted","useEffect","height","padding","forceFit","position","color","label","val","tooltip","value","Rose","filter","onClick","e","visible","showTitle","adjust","element-highlight","lineWidth","stroke","offset","getAmmountByDay","dictDay","results","nameObj","forEach","record","time","Date","starttime","getDate","undefined","typeDay","getDay","push","ds","DataSet","Citibike","createView","source","ammountsByDay","setAmmount","totals","result","element","count","total","nameDay","number","avergayByDayOfWeek","average","currentDay","setCurrentDay","gutter","span","dv","transform","callback","row","parseInt","rows","Sider","customSider","collapsed","trigger","collapsible","className","theme","mode","defaultSelectedKeys","to","UserOutlined","DashboardTwoTone","icon","UploadOutlined","Header","Content","Routes","setCollapsed","basename","process","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","exact","path","component","Citybike","Boolean","window","location","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df22d2e3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Card, Typography, Table, Divider, List } from \"antd\";\r\n\r\nconst columns = [\r\n  { title: \"Nombre\", dataIndex: \"name\", key: \"name\" },\r\n  { title: \"Tipo\", dataIndex: \"type\", key: \"type\" },\r\n  { title: \"Opcional\", dataIndex: \"option\", key: \"option\" },\r\n  { title: \"Descripción\", dataIndex: \"description\", key: \"description\" },\r\n]\r\n\r\nconst tableData = [\r\n  {\r\n    key: 1,\r\n    name: \"tripduration\",\r\n    type: \"Integer\",\r\n    option: \"False\",\r\n    description: \"Duración del viaje en minutos\",\r\n  },\r\n  {\r\n    key: 2,\r\n    name: \"starttime\",\r\n    type: \"time\",\r\n    option: \"False\",\r\n    description: \"Fecha y hora del inicio del viaje\",\r\n  },\r\n  {\r\n    key: 3,\r\n    name: \"stoptime\",\r\n    type: \"time\",\r\n    option: \"False\",\r\n    description: \"Fecha y hora del fin del viaje\",\r\n  },\r\n  {\r\n    key: 4,\r\n    name: \"start station id\",\r\n    type: \"integer\",\r\n    option: \"False\",\r\n    description: \"id de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 5,\r\n    name: \"start station name\",\r\n    type: \"String\",\r\n    option: \"False\",\r\n    description: \"Nombre de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 6,\r\n    name: \"start station latitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Latitud de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 7,\r\n    name: \"start station longitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Longitud de la estación de inicio\",\r\n  },\r\n  ,\r\n  {\r\n    key: 8,\r\n    name: \"end station id\",\r\n    type: \"Integer\",\r\n    option: \"False\",\r\n    description: \"Id de la estación de salida\",\r\n  },\r\n  {\r\n    key: 9,\r\n    name: \"end station name\",\r\n    type: \"String\",\r\n    option: \"False\",\r\n    description: \"Nombre de la estación de salida\",\r\n  },\r\n  {\r\n    key: 10,\r\n    name: \"end station latitude\",\r\n    type: \"float\",\r\n    option: \"False\",\r\n    description: \"Latitud de la estación de salida\",\r\n  },\r\n  {\r\n    key: 11,\r\n    name: \"end station longitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Longitud de la estación de salida\",\r\n  },\r\n  {\r\n    key: 12,\r\n    name: \"bikeid\",\r\n    type: \"Integer\",\r\n    option: \"true\",\r\n    description: \"id de la cicla\",\r\n  },\r\n  {\r\n    key: 13,\r\n    name: \"usertype\",\r\n    type: \"String\",\r\n    option: \"true\",\r\n    description: \"Tipo de usuario\",\r\n  },\r\n  {\r\n    key: 14,\r\n    name: \"birth year\",\r\n    type: \"Integer\",\r\n    option: \"true\",\r\n    description: \"Año de nacimiento del usuario\",\r\n  },\r\n  {\r\n    key: 15,\r\n    name: \"gender\",\r\n    type: \"binary\",\r\n    option: \"true\",\r\n    description: \"male/female\",\r\n  }\r\n];\r\n\r\n// start station longitude\",\"end station id\",\"end station name\",\"end station latitude\",\"end station longitude\",\"bikeid\",\"usertype\",\"birth year\",\"gender\"\r\n\r\nconst listData = [\r\n  {\r\n    name: \"Nicolás Parra Ramos\",\r\n    linkedin: \"https://www.linkedin.com/in/nicol%C3%A1s-parra-ramos-366910140/\",\r\n    github: \"https://github.com/NicolasPrr\",\r\n    email: \"niparrara@unal.edu.co\",\r\n  },\r\n  {\r\n    name: \"Johnathan Andrés León Rodriguez\",\r\n    linkedin: \"https://www.linkedin.com/\",\r\n    github: \"https://github.com/jaleonro\",\r\n    email: \"jaleonro@unal.edu.co\",\r\n  },\r\n];\r\nconst { Title, Text } = Typography;\r\n\r\nconst Introduction = () => {\r\n  return (\r\n    <Card bordered={false} style={{ textAlign: \"center\" }}>\r\n      <Title>Dashboard COMPUTACIÓN VISUAL 2020-1</Title>\r\n\r\n      <Divider orientation=\"left\">Integrantes </Divider>\r\n\r\n      <List\r\n        size=\"small\"\r\n        // bordered\r\n        dataSource={listData}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            actions={[\r\n              <a href={item.linkedin}> Linkedin</a>,\r\n              <a href={item.github}>Github</a>,\r\n            ]}\r\n          >\r\n            <div style={{ textAlign: \"left\" }}>\r\n              <List.Item.Meta title={item.name} description={item.email} />\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n\r\n      <Divider orientation=\"left\">Descripción </Divider>\r\n      <Text>\r\n        La pagina muestra la visualización de los datos del sistema de\r\n        bicicletas de NY{\" \"}\r\n        <a href=\"https://www.citibikenyc.com/system-data\">CitiBike</a> más\r\n        especificamente los datos del mes marzo del 2020 encontrados{\" \"}\r\n        <a href=\"https://s3.amazonaws.com/tripdata/JC-202003-citibike-tripdata.csv.zip\">\r\n          aquí\r\n        </a>{\" \"}\r\n        cuya estructura de datos se presenta en la siguiente tabla.\r\n      </Text>\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <Table size=\"small\" dataSource={tableData} columns={columns} pagination={{pageSize: 20}} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"antd\";\r\n\r\nimport { Chart, Geom, Axis, Legend } from \"bizcharts\";\r\n\r\nconst scale = {};\r\nconst colors = [\r\n  \"#6395F9\",\r\n  \"#62DAAB\",\r\n  \"#657798\",\r\n  \"#F6C022\",\r\n  \"#E96C5B\",\r\n  \"#74CBED\",\r\n  \"#9967BD\",\r\n];\r\nconst Bar = ({ data, day }) => {\r\n  const [mounted, setMounted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza el título del documento usando la API del navegador\r\n    setMounted(true);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Card size=\"small\" title={`cantidad de recorridos por día-${day}`}>\r\n      {mounted && (\r\n        <Chart data={data} scale={scale} height={400} padding={30} forceFit>\r\n          {/* <Axis name=\"value\" /> */}\r\n          <Axis name=\"day\" />\r\n          <Geom\r\n            type=\"interval\"\r\n            position=\"day*value\"\r\n            // color={[\"type\", \"#E6F6C8-#3376CB\"]}\r\n            color={[\r\n              \"type\",\r\n              (type) => {\r\n                return colors[type];\r\n              },\r\n            ]}\r\n            label={[\"value\", (val) => \"val\"]}\r\n            tooltip={[\r\n              \"day*value*type\",\r\n              (day, value, type) => {\r\n                // array\r\n                const dayName =\r\n                  type === 0\r\n                    ? \"L\"\r\n                    : type === 1\r\n                    ? \"M\"\r\n                    : type === 2\r\n                    ? \"W\"\r\n                    : type === 3\r\n                    ? \"J\"\r\n                    : type === 4\r\n                    ? \"V\"\r\n                    : type === 5\r\n                    ? \"S\"\r\n                    : \"D\";\r\n                return {\r\n                  //   title=\"day-value-name\",\r\n                  name: \"día del mes, recorrido, dia de la semana \",\r\n                  value: day + \"-\" + value + \"-\" + dayName,\r\n                };\r\n              },\r\n            ]}\r\n          >\r\n            <Legend position=\"right\" />\r\n          </Geom>\r\n        </Chart>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport { Chart, Interval, Tooltip, Axis, Coordinate } from \"bizcharts\";\r\n\r\nconst Rose = ({ data, filter }) => {\r\n  const [mounted, setMounted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  },[data]);\r\n\r\n  return (\r\n    <Card title=\"Promedio por día de la semana\" size=\"small\">\r\n      {mounted && (\r\n        <Chart\r\n          height={400}\r\n          data={data}\r\n          forceFit\r\n          onClick={(e) => filter(e)}\r\n        >\r\n          <Coordinate type=\"polar\" />\r\n          <Axis visible={false} />\r\n          <Tooltip showTitle={false} />\r\n          <Interval\r\n            position=\"name*value\"\r\n            adjust=\"stack\"\r\n            element-highlight\r\n            color=\"name\"\r\n            style={{\r\n              lineWidth: 1,\r\n              stroke: \"#fff\",\r\n            }}\r\n            label={[\r\n              \"name\",\r\n              {\r\n                offset: -15,\r\n              },\r\n            ]}\r\n          />\r\n        </Chart>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default Rose;\r\n","function getAmmountByDay(data) {\r\n  let dictDay = {};\r\n  let results = [];\r\n  data.forEach((record) => {\r\n    const time = new Date(record.starttime);\r\n    const day = time.getDate();\r\n    if (dictDay[day] === undefined) {\r\n      const typeDay = time.getDay();\r\n      dictDay[day] = { value: 1, type: typeDay };\r\n    } else {\r\n      dictDay[day] = { ...dictDay[day], value: dictDay[day].value + 1 };\r\n    }\r\n  });\r\n  for (let nameObj in dictDay) {\r\n    results.push({\r\n      day: nameObj,\r\n      value: dictDay[nameObj].value,\r\n      type: dictDay[nameObj].type,\r\n    });\r\n  }\r\n  return results;\r\n}\r\n\r\nfunction avergayByDayOfWeek(data) {\r\n  /**\r\n   * data = [{value:100, day: 1, type:10}]\r\n   */\r\n  let totals = {};\r\n  let result = [];\r\n  data.forEach((element) => {\r\n    if (totals[element.type] === undefined) {\r\n      totals[element.type] = { count: 1, total: element.value };\r\n    } else {\r\n      totals[element.type] = {\r\n        count: totals[element.type].count + 1,\r\n        total: totals[element.type].total + element.value,\r\n      };\r\n    }\r\n  });\r\n  for (let nameObj in totals) {\r\n    const nameDay =\r\n      nameObj === \"0\"\r\n        ? \"L\"\r\n        : nameObj === \"1\"\r\n        ? \"M\"\r\n        : nameObj === \"2\"\r\n        ? \"W\"\r\n        : nameObj === \"3\"\r\n        ? \"J\"\r\n        : nameObj === \"4\"\r\n        ? \"V\"\r\n        : nameObj === \"5\"\r\n        ? \"S\"\r\n        : \"D\";\r\n    result.push({\r\n      name: nameDay,\r\n      value: totals[nameObj].total / totals[nameObj].count,\r\n      number: nameObj,\r\n    });\r\n  }\r\n  return result;\r\n}\r\nexport { getAmmountByDay, avergayByDayOfWeek };\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport BarChart from \"../components/charts/Bar\";\r\nimport Rose from \"../components/charts/Rose\";\r\nimport { avergayByDayOfWeek, getAmmountByDay } from \"../utils\";\r\nimport data from \"../data/citybike/bike_2020_03-.json\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst ds = new DataSet();\r\nconst Citibike = () => {\r\n  const [ammountsByDay, setAmmount] = React.useState(\r\n    ds.createView().source(getAmmountByDay(data))\r\n  );\r\n  const [average, setAverage] = React.useState(\r\n    avergayByDayOfWeek(getAmmountByDay(data))\r\n  );\r\n  const [currentDay, setCurrentDay] = React.useState(\"All\");\r\n\r\n  function resetBar() {\r\n    setAmmount(ds.createView().source(getAmmountByDay(data)));\r\n  }\r\n\r\n  function filterAmmout(e) {\r\n    if (e.data === null || e.data === undefined) {\r\n      resetBar();\r\n      setCurrentDay(\"All\");\r\n    } else {\r\n      if (e.data.data !== undefined) {\r\n        const dv = ds.createView().source(getAmmountByDay(data));\r\n        dv.transform({\r\n          type: \"filter\",\r\n          callback(row) {\r\n            return row.type === parseInt(e.data.data.number);\r\n          },\r\n        });\r\n        setAmmount(dv);\r\n        setCurrentDay(e.data.data.name);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          Para resetear el grafico de barras se debe dar click en un espacio en blanco en el grafico de promedio por día de la semana.\r\n        </li>\r\n      </ul>\r\n      <Row gutter={[15, 15]}>\r\n        <Col span=\"12\">\r\n          <Rose data={average} filter={filterAmmout} />\r\n        </Col>\r\n        <Col span=\"12\">\r\n          <BarChart key=\"barchar\" data={ammountsByDay.rows} day={currentDay} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Citibike;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  DashboardTwoTone,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst customSider = ({ collapsed }) => {\r\n  return (\r\n    <Sider trigger={null} collapsible collapsed={collapsed}>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n        <Menu.Item key=\"1\" onClick={null}>\r\n          <Link to=\"/\">\r\n            <UserOutlined />\r\n            <span>introducción</span>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" onClick={null}>\r\n          <Link to=\"/citybike\">\r\n            <span>\r\n              <DashboardTwoTone /> <span>Dashboard citibyke </span>\r\n            </span>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n          nav 3\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default customSider;\r\n","import React from \"react\";\r\nimport \"./styles/sider.css\";\r\nimport Introduction from \"./views/Introduction\";\r\nimport Citybike from \"./views/Citybike\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Sider from \"./components/general/Sider\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Header, Content } = Layout;\r\nconst Routes = () => {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n\r\n  const Toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Layout>\r\n        <Sider collapsed={collapsed} />\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(\r\n              collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n              {\r\n                className: \"trigger\",\r\n                onClick: Toggle,\r\n              }\r\n            )}\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"15px 16px\",\r\n              padding: 20,\r\n              minHeight: 768,\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/citybike\" component={Citybike} />\r\n              <Route exact path=\"/*\" component={Introduction} />\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Router from \"./Router\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Router />\r\n  // </React.StrictMode>,\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}