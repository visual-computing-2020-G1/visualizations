{"version":3,"sources":["views/Introduction.js","utils/index.js","components/charts/Bar.jsx","components/charts/HorizontalBar.jsx","components/charts/Rose.jsx","components/charts/map/Map.jsx","components/charts/map/MapBox.tsx","views/Citybike.jsx","components/general/Sider.js","Router.js","serviceWorker.js","index.js"],"names":["columns","title","dataIndex","key","tableData","name","type","option","description","listData","linkedin","github","email","Title","Text","Introduction","bordered","style","textAlign","orientation","size","dataSource","renderItem","item","Item","actions","href","Meta","marginTop","pagination","pageSize","getAmmountByDay","data","dictDay","results","nameObj","forEach","record","time","Date","starttime","day","getDate","undefined","typeDay","getDay","value","push","scale","colors","Bar","React","useState","mounted","setMounted","useEffect","height","padding","forceFit","element-highlight","position","color","label","val","tooltip","Stacked","ds","DataSet","formatArray","currentStation","newData","obj","objCp","coord","startName","endName","endToStart","startToEnd","console","log","this","props","dv","createView","source","transform","callback","a","b","fields","retains","dt","length","rows","autoFit","transpose","offset","adjust","Component","Rose","filter","onClick","e","visible","showTitle","lineWidth","stroke","MapScene","places","lines","edgeFilterProp","setCurrentStation","popupInfoLine","setPopupInfoLine","popupInfo","setPopupInfo","filterLine","setFilterLine","allLines","setAllLines","map","center","pitch","zoom","top","left","right","bottom","lnglat","feature","margin","input","output","blend","parser","coordinates","values","field","start","end","total","shape","active","opacity","animate","enable","trailLength","interval","duration","handler","args","lngLat","options","confirmedCount","dataFlyTest","joinData","geodata","ncovData","ncovDataObj","countryName","countryEnglishName","currentConfirmedCount","suspectedCount","curedCount","deadCount","geoObj","features","properties","ncov","setData","filldata","setfillData","Promise","all","fetch","then","d","json","geoData","worldData","pointdata","fetchData","Citibike","ammountsByDay","setAmmount","totals","result","element","count","nameDay","number","avergayByDayOfWeek","average","currentDay","setCurrentDay","dictEdges","place","lat","long","nameStart","nameEnd","startCoord","endCoord","name0","checked","edges","names","split","startValue","endValue","placeArray","i","namePlace","centroid","getPlaces","dataMap","edgesFilter","setEdgesFilter","gutter","span","row","parseInt","bodyStyle","minHeight","HorizontalBar","Sider","customSider","collapsed","trigger","collapsible","className","theme","mode","defaultSelectedKeys","to","UserOutlined","DashboardTwoTone","icon","UploadOutlined","Header","Content","Routes","setCollapsed","basename","process","createElement","MenuUnfoldOutlined","MenuFoldOutlined","exact","path","component","Citybike","Boolean","window","location","hostname","match","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef978977.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Card, Typography, Table, Divider, List } from \"antd\";\r\n\r\nconst columns = [\r\n  { title: \"Nombre\", dataIndex: \"name\", key: \"name\" },\r\n  { title: \"Tipo\", dataIndex: \"type\", key: \"type\" },\r\n  { title: \"Opcional\", dataIndex: \"option\", key: \"option\" },\r\n  { title: \"Descripción\", dataIndex: \"description\", key: \"description\" },\r\n]\r\n\r\nconst tableData = [\r\n  {\r\n    key: 1,\r\n    name: \"tripduration\",\r\n    type: \"Integer\",\r\n    option: \"False\",\r\n    description: \"Duración del viaje en minutos\",\r\n  },\r\n  {\r\n    key: 2,\r\n    name: \"starttime\",\r\n    type: \"time\",\r\n    option: \"False\",\r\n    description: \"Fecha y hora del inicio del viaje\",\r\n  },\r\n  {\r\n    key: 3,\r\n    name: \"stoptime\",\r\n    type: \"time\",\r\n    option: \"False\",\r\n    description: \"Fecha y hora del fin del viaje\",\r\n  },\r\n  {\r\n    key: 4,\r\n    name: \"start station id\",\r\n    type: \"integer\",\r\n    option: \"False\",\r\n    description: \"id de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 5,\r\n    name: \"start station name\",\r\n    type: \"String\",\r\n    option: \"False\",\r\n    description: \"Nombre de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 6,\r\n    name: \"start station latitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Latitud de la estación de inicio\",\r\n  },\r\n  {\r\n    key: 7,\r\n    name: \"start station longitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Longitud de la estación de inicio\",\r\n  },\r\n  ,\r\n  {\r\n    key: 8,\r\n    name: \"end station id\",\r\n    type: \"Integer\",\r\n    option: \"False\",\r\n    description: \"Id de la estación de salida\",\r\n  },\r\n  {\r\n    key: 9,\r\n    name: \"end station name\",\r\n    type: \"String\",\r\n    option: \"False\",\r\n    description: \"Nombre de la estación de salida\",\r\n  },\r\n  {\r\n    key: 10,\r\n    name: \"end station latitude\",\r\n    type: \"float\",\r\n    option: \"False\",\r\n    description: \"Latitud de la estación de salida\",\r\n  },\r\n  {\r\n    key: 11,\r\n    name: \"end station longitude\",\r\n    type: \"Float\",\r\n    option: \"False\",\r\n    description: \"Longitud de la estación de salida\",\r\n  },\r\n  {\r\n    key: 12,\r\n    name: \"bikeid\",\r\n    type: \"Integer\",\r\n    option: \"true\",\r\n    description: \"id de la cicla\",\r\n  },\r\n  {\r\n    key: 13,\r\n    name: \"usertype\",\r\n    type: \"String\",\r\n    option: \"true\",\r\n    description: \"Tipo de usuario\",\r\n  },\r\n  {\r\n    key: 14,\r\n    name: \"birth year\",\r\n    type: \"Integer\",\r\n    option: \"true\",\r\n    description: \"Año de nacimiento del usuario\",\r\n  },\r\n  {\r\n    key: 15,\r\n    name: \"gender\",\r\n    type: \"binary\",\r\n    option: \"true\",\r\n    description: \"male/female\",\r\n  }\r\n];\r\n\r\n// start station longitude\",\"end station id\",\"end station name\",\"end station latitude\",\"end station longitude\",\"bikeid\",\"usertype\",\"birth year\",\"gender\"\r\n\r\nconst listData = [\r\n  {\r\n    name: \"Nicolás Parra Ramos\",\r\n    linkedin: \"https://www.linkedin.com/in/nicol%C3%A1s-parra-ramos-366910140/\",\r\n    github: \"https://github.com/NicolasPrr\",\r\n    email: \"niparrara@unal.edu.co\",\r\n  },\r\n  {\r\n    name: \"Johnathan Andrés León Rodriguez\",\r\n    linkedin: \"https://www.linkedin.com/\",\r\n    github: \"https://github.com/jaleonro\",\r\n    email: \"jaleonro@unal.edu.co\",\r\n  },\r\n];\r\nconst { Title, Text } = Typography;\r\n\r\nconst Introduction = () => {\r\n  return (\r\n    <Card bordered={false} style={{ textAlign: \"center\" }}>\r\n      <Title>Dashboard COMPUTACIÓN VISUAL 2020-1</Title>\r\n\r\n      <Divider orientation=\"left\">Integrantes </Divider>\r\n\r\n      <List\r\n        size=\"small\"\r\n        // bordered\r\n        dataSource={listData}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            actions={[\r\n              <a href={item.linkedin}> Linkedin</a>,\r\n              <a href={item.github}>Github</a>,\r\n            ]}\r\n          >\r\n            <div style={{ textAlign: \"left\" }}>\r\n              <List.Item.Meta title={item.name} description={item.email} />\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      />\r\n\r\n      <Divider orientation=\"left\">Descripción </Divider>\r\n      <Text>\r\n        La pagina muestra la visualización de los datos del sistema de\r\n        bicicletas de NY{\" \"}\r\n        <a href=\"https://www.citibikenyc.com/system-data\">CitiBike</a> más\r\n        especificamente los datos del mes marzo del 2020 encontrados{\" \"}\r\n        <a href=\"https://s3.amazonaws.com/tripdata/JC-202003-citibike-tripdata.csv.zip\">\r\n          aquí\r\n        </a>{\" \"}\r\n        cuya estructura de datos se presenta en la siguiente tabla.\r\n      </Text>\r\n      <div style={{ marginTop: \"2%\" }}>\r\n        <Table size=\"small\" dataSource={tableData} columns={columns} pagination={{pageSize: 20}} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","export function getAmmountByDay(data) {\r\n  //All .json\r\n  let dictDay = {};\r\n  let results = [];\r\n  data.forEach((record) => {\r\n    const time = new Date(record.starttime);\r\n    const day = time.getDate();\r\n    if (dictDay[day] === undefined) {\r\n      const typeDay = time.getDay();\r\n      dictDay[day] = { value: 1, type: typeDay };\r\n    } else {\r\n      dictDay[day] = { ...dictDay[day], value: dictDay[day].value + 1 };\r\n    }\r\n  });\r\n  for (let nameObj in dictDay) {\r\n    results.push({\r\n      day: nameObj,\r\n      value: dictDay[nameObj].value,\r\n      type: dictDay[nameObj].type,\r\n    });\r\n  }\r\n  return results;\r\n}\r\n\r\nexport function avergayByDayOfWeek(data) {\r\n  /**\r\n   * data = [{value:100, day: 1, type:10}]\r\n   */\r\n  let totals = {};\r\n  let result = [];\r\n  data.forEach((element) => {\r\n    if (totals[element.type] === undefined) {\r\n      totals[element.type] = { count: 1, total: element.value };\r\n    } else {\r\n      totals[element.type] = {\r\n        count: totals[element.type].count + 1,\r\n        total: totals[element.type].total + element.value,\r\n      };\r\n    }\r\n  });\r\n  for (let nameObj in totals) {\r\n    const nameDay =\r\n      nameObj === \"0\"\r\n        ? \"L\"\r\n        : nameObj === \"1\"\r\n        ? \"M\"\r\n        : nameObj === \"2\"\r\n        ? \"W\"\r\n        : nameObj === \"3\"\r\n        ? \"J\"\r\n        : nameObj === \"4\"\r\n        ? \"V\"\r\n        : nameObj === \"5\"\r\n        ? \"S\"\r\n        : \"D\";\r\n    result.push({\r\n      name: nameDay,\r\n      value: totals[nameObj].total / totals[nameObj].count,\r\n      number: nameObj,\r\n    });\r\n  }\r\n  return result;\r\n}\r\nexport function getPlaces(data) {\r\n  /*\r\n  @data: array of all data\r\n  */\r\n  let places = {};\r\n  let lines = [];\r\n  let dictEdges = {};\r\n  data.forEach((record) => {\r\n    const place = record[\"start station name\"];\r\n    if (places[place] === undefined) {\r\n      const coord = {\r\n        lat: record[\"start station latitude\"],\r\n        long: record[\"start station longitude\"],\r\n      };\r\n      places[place] = { coord: { ...coord }, input: 1, output: 0 };\r\n    } else {\r\n      places[place] = { ...places[place], input: places[place].input + 1 };\r\n    }\r\n  });\r\n  data.forEach((record) => {\r\n    const place = record[\"end station name\"];\r\n    if (places[place] === undefined) {\r\n      const coord = {\r\n        lat: record[\"end station latitude\"],\r\n        long: record[\"end station longitude\"],\r\n      };\r\n      places[place] = { coord: { ...coord }, output: 1, input: 0 };\r\n    } else {\r\n      places[place] = { ...places[place], output: places[place].output + 1 };\r\n    }\r\n  });\r\n\r\n  data.forEach((record) => {\r\n    //pairvalues count\r\n    const nameStart = record[\"start station name\"];\r\n    const nameEnd = record[\"end station name\"];\r\n    const startCoord = {\r\n      lat: record[\"start station latitude\"],\r\n      long: record[\"start station longitude\"],\r\n    };\r\n    const endCoord = {\r\n      lat: record[\"end station latitude\"],\r\n      long: record[\"end station longitude\"],\r\n    };\r\n    const name0 = `${nameStart}|${nameEnd}`;\r\n    if (dictEdges[name0] === undefined) {\r\n      dictEdges[name0] = {\r\n        value: 1,\r\n        startCoord: startCoord,\r\n        endCoord: endCoord,\r\n        checked: false,\r\n      };\r\n    } else {\r\n      dictEdges[name0] = {\r\n        ...dictEdges[name0],\r\n        value: dictEdges[name0].value + 1,\r\n      };\r\n    }\r\n  });\r\n  console.log(\"dictEdges\", dictEdges);\r\n  let edges = [];\r\n  for (let nameObj in dictEdges) {\r\n    const names = nameObj.split(\"|\");\r\n    const startCoord = dictEdges[`${names[0]}|${names[1]}`].startCoord;\r\n    const endCoord = dictEdges[`${names[0]}|${names[1]}`].endCoord;\r\n    const startValue = dictEdges[`${names[0]}|${names[1]}`].value;\r\n    const endValue =\r\n      dictEdges[`${names[1]}|${names[0]}`] === undefined\r\n        ? 0\r\n        : dictEdges[`${names[1]}|${names[0]}`].value;\r\n    edges.push({\r\n      coord: [\r\n        [startCoord.long, startCoord.lat],\r\n        [endCoord.long, endCoord.lat],\r\n      ],\r\n      startName: names[0],\r\n      endName: names[1],\r\n      startToEnd: startValue,\r\n      endToStart: endValue,\r\n    });\r\n  }\r\n  console.log(\"edges\", edges);\r\n  let placeArray = [];\r\n  let i = 0;\r\n  for (let namePlace in places) {\r\n    const lat = places[namePlace].coord.lat;\r\n    const long = places[namePlace].coord.long;\r\n    const input = places[namePlace].input;\r\n    const output = places[namePlace].output;\r\n    placeArray.push({\r\n      name: namePlace,\r\n      key: i,\r\n      centroid: [long * 1, lat * 1],\r\n      input: input,\r\n      output: output,\r\n    });\r\n    i++;\r\n  }\r\n  return {placeArray, edges};\r\n}\r\n// export { getAmmountByDay, avergayByDayOfWeek };\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"antd\";\r\n\r\nimport { Chart, Geom, Axis, Legend, Interval } from \"bizcharts\";\r\n\r\nconst scale = {};\r\nconst colors = [\r\n  \"#6395F9\",\r\n  \"#62DAAB\",\r\n  \"#657798\",\r\n  \"#F6C022\",\r\n  \"#E96C5B\",\r\n  \"#74CBED\",\r\n  \"#9967BD\",\r\n];\r\nconst Bar = ({ data, day }) => {\r\n  const [mounted, setMounted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Actualiza el título del documento usando la API del navegador\r\n    setMounted(true);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Card size=\"small\" title={`cantidad de recorridos por día-${day}`}>\r\n      {mounted && (\r\n        <Chart\r\n          data={data}\r\n          scale={scale}\r\n          height={400}\r\n          padding={30}\r\n          forceFit\r\n        >\r\n          {/* <Axis name=\"value\" /> */}\r\n          <Axis name=\"day\" />\r\n          <Geom\r\n          element-highlight\r\n            type=\"interval\"\r\n            position=\"day*value\"\r\n            color={[\r\n              \"type\",\r\n              (type) => {\r\n                return colors[type];\r\n              },\r\n            ]}\r\n            label={[\"value\", (val) => \"val\"]}\r\n            tooltip={[\r\n              \"day*value*type\",\r\n              (day, value, type) => {\r\n                // array\r\n                const dayName =\r\n                  type === 0\r\n                    ? \"L\"\r\n                    : type === 1\r\n                    ? \"M\"\r\n                    : type === 2\r\n                    ? \"W\"\r\n                    : type === 3\r\n                    ? \"J\"\r\n                    : type === 4\r\n                    ? \"V\"\r\n                    : type === 5\r\n                    ? \"S\"\r\n                    : \"D\";\r\n                return {\r\n                  //   title=\"day-value-name\",\r\n                  name: \"día del mes, recorrido, dia de la semana \",\r\n                  value: day + \"-\" + value + \"-\" + dayName,\r\n                };\r\n              },\r\n            ]}\r\n          >\r\n            <Legend position=\"right\" />\r\n          </Geom>\r\n        </Chart>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport {\r\n  Chart,\r\n  Interval,\r\n  Axis,\r\n  Tooltip,\r\n  Coordinate,\r\n  Label,\r\n  Legend,\r\n  View,\r\n  Guide,\r\n  Shape,\r\n  Facet,\r\n  Util,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nconst exampleData = [\r\n  {\r\n    endName: \"Monmouth and 6th\",\r\n    endToStart: 2,\r\n    startName: \"Newport Pkwy\",\r\n    startToEnd: 2,\r\n  },\r\n  {\r\n    endName: \"Riverview Park\",\r\n    endToStart: 21,\r\n    startName: \"Heights Elevator\",\r\n    startToEnd: 21,\r\n  },\r\n  {\r\n    endName: \"Newport Pkwy\",\r\n    endToStart: 9,\r\n    startName: \"Heights Elevator\",\r\n    startToEnd: 9,\r\n  },\r\n];\r\nclass Stacked extends React.Component {\r\n  render() {\r\n    const ds = new DataSet();\r\n    function formatArray(data, currentStation) {\r\n      let newData = [];\r\n      data.forEach((obj) => {\r\n        const objCp = { ...obj };\r\n        delete objCp.coord;\r\n        obj.startName === currentStation\r\n          ? newData.push(objCp)\r\n          : newData.push({\r\n              startName: obj.endName,\r\n              endName: obj.startName,\r\n              endToStart: obj.startToEnd,\r\n              startToEnd: obj.endToStart,\r\n            });\r\n      });\r\n      console.log(\"newData\", newData);\r\n      return newData;\r\n    }\r\n    console.log(this.props.data)\r\n    const dv = ds\r\n      .createView()\r\n      .source(formatArray(this.props.data, this.props.currentStation));\r\n    //   .source(formatArray(this.props.data, this.props.currentStation));\r\n    console.log(\"currents...\" , formatArray(this.props.data, this.props.currentStation));\r\n\r\n    dv.transform({\r\n      type: \"sort\",\r\n      callback(a, b) {\r\n        return (a.startToEnd + a.endToStart - b.endToStart - b.startToEnd) ;\r\n      },\r\n    });\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"startToEnd\", \"endToStart\"],\r\n      key: \"key\",\r\n      value: \"valor\",\r\n      retains: [\"endName\"],\r\n    });\r\n    console.log(dv);\r\n    const dt = this.props.data;\r\n    return (\r\n      <div>\r\n        {dt.length > 0 && (\r\n          <Chart height={600} data={dv.rows} autoFit>\r\n            <Coordinate transpose />\r\n            <Axis\r\n              name=\"endName\"\r\n              label={{\r\n                offset: 12,\r\n              }}\r\n            />\r\n            <Interval\r\n              adjust={[{ type: \"stack\" }]}\r\n              position=\"endName*valor\"\r\n              color={\"key\"}\r\n            />\r\n          </Chart>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stacked;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nimport { Chart, Interval, Tooltip, Axis, Coordinate } from \"bizcharts\";\r\n\r\nconst Rose = ({ data, filter }) => {\r\n  const [mounted, setMounted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  },[data]);\r\n\r\n  return (\r\n    <Card title=\"Promedio por día de la semana\" size=\"small\">\r\n      {mounted && (\r\n        <Chart\r\n          height={400}\r\n          data={data}\r\n          forceFit\r\n          onClick={(e) => filter(e)}\r\n          // onMouseDown={e => console.log(e)}\r\n        >\r\n          <Coordinate type=\"polar\" />\r\n          <Axis visible={true} />\r\n          <Tooltip showTitle={false} />\r\n          <Interval\r\n            position=\"name*value\"\r\n            adjust=\"stack\"\r\n            element-highlight\r\n            color=\"name\"\r\n            style={{\r\n              lineWidth: 1,\r\n              stroke: \"#fff\",\r\n            }}\r\n            label={[\r\n              \"name\",\r\n              {\r\n                offset: -15,\r\n              },\r\n            ]}\r\n          />\r\n        </Chart>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default Rose;\r\n","import {\r\n  AMapScene,\r\n  LineLayer,\r\n  LayerEvent,\r\n  MapboxScene,\r\n  Marker,\r\n  Control,\r\n  PointLayer,\r\n  Popup,\r\n} from \"@antv/l7-react\";\r\nimport * as React from \"react\";\r\n\r\n// const IMarkerOption= {}\r\nconst dataFlyTest = [\r\n  // {\r\n  //   coord: [\r\n  //     [-74.0337589, 40.7272235],\r\n  //     [-74.21105069962759, 4.285993532528952],\r\n  //   ],\r\n  // },\r\n  {\r\n    coord: [\r\n      [-74.0337589, 40.7272235],\r\n      [-74.044247311, 40.727595966],\r\n    ],\r\n    size: 3,\r\n    key: 1,\r\n  },\r\n  {\r\n    coord: [\r\n      [-74.06762212514877, 40.7253399253558],\r\n      [-74.0337589, 40.7272235],\r\n    ],\r\n    size: 4,\r\n    key: 2,\r\n  },\r\n];\r\nconst MapScene = React.memo(function Map({\r\n  places,\r\n  lines,\r\n  edgeFilterProp,\r\n  setCurrentStation,\r\n}) {\r\n  // console.log(places);\r\n  const [popupInfoLine, setPopupInfoLine] = React.useState();\r\n  const [popupInfo, setPopupInfo] = React.useState();\r\n  const [filterLine, setFilterLine] = React.useState(\"\");\r\n  const [allLines, setAllLines] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStation(filterLine);\r\n    edgeFilterProp(\r\n      lines.filter(\r\n        (val) => val.startName === filterLine || val.endName === filterLine\r\n      )\r\n    );\r\n  }, [filterLine]);\r\n  function showPopup(args) {\r\n    console.log(args);\r\n    args.feature &&\r\n      setPopupInfo({\r\n        lnglat: args.lngLat,\r\n        feature: args.feature,\r\n      });\r\n    setAllLines(false);\r\n    setFilterLine(args.feature.name);\r\n  }\r\n  function showPopupLine(args) {\r\n    console.log(args);\r\n    args.feature &&\r\n      setPopupInfoLine({\r\n        lnglat: args.lngLat,\r\n        feature: args.feature,\r\n      });\r\n    // setAllLines(false);\r\n    // setFilterLine(args.feature.name);\r\n  }\r\n  return (\r\n    <MapboxScene\r\n      map={{\r\n        center: [-74.044247311, 40.727595971],\r\n        pitch: 0,\r\n        style: \"dark\",\r\n        zoom: 13,\r\n      }}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <Control type=\"scale\" position=\"topleft\" />\r\n      <Control type=\"zoom\" position=\"topleft\" />\r\n      {popupInfo && (\r\n        <Popup lnglat={popupInfo.lnglat}>\r\n          {popupInfo.feature.name}\r\n          <ul\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <li>Estación de inicio:{popupInfo.feature.input}</li>\r\n            <li>Estación final :{popupInfo.feature.output}</li>\r\n          </ul>\r\n        </Popup>\r\n      )}\r\n      {popupInfoLine && (\r\n        <Popup lnglat={popupInfoLine.lnglat}>\r\n          {\"Trayectos\"}\r\n          <ul\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {`${popupInfoLine.feature.startName}-${popupInfoLine.feature.endName}`}\r\n              :{popupInfoLine.feature.startToEnd}\r\n            </li>\r\n            <li>\r\n              {`${popupInfoLine.feature.endName}-${popupInfoLine.feature.startName}`}\r\n              :{popupInfoLine.feature.endToStart}\r\n            </li>\r\n          </ul>\r\n        </Popup>\r\n      )}\r\n      <LineLayer\r\n        blend=\"normal\"\r\n        key={\"2\"}\r\n        source={{\r\n          data: lines.filter(\r\n            (val) =>\r\n              val.startName === filterLine ||\r\n              val.endName === filterLine ||\r\n              allLines\r\n          ),\r\n          parser: {\r\n            type: \"json\",\r\n            coordinates: \"coord\",\r\n            // key: \"key\",\r\n          },\r\n        }}\r\n        size={{\r\n          values: 1.2,\r\n        }}\r\n        color={{\r\n          field: \"startToEnd*endToStart\",\r\n          values: (start, end) => {\r\n            const total = start + end;\r\n            return total > 50\r\n              ? \"#914BF2\"\r\n              : total >= 40\r\n              ? \"#4BB2F2\"\r\n              : total >= 30\r\n              ? \"#8C0707\"\r\n              : total >= 20\r\n              ? \"#3C474B\"\r\n              : total >= 10\r\n              ? \"#162521\"\r\n              : \"#f5f5f5\";\r\n          },\r\n\r\n          // values: \"#8C1EB2\",\r\n        }}\r\n        shape={{\r\n          values: \"line\",\r\n        }}\r\n        active={{ option: true }}\r\n        style={{\r\n          opacity: 0.5,\r\n        }}\r\n        animate={{\r\n          enable: true,\r\n          trailLength: 1.2,\r\n          interval: 0.5,\r\n          duration: 7,\r\n        }}\r\n      >\r\n        <LayerEvent type=\"click\" handler={(e) => showPopupLine(e)} />\r\n      </LineLayer>\r\n      {/* <PointLayer/> */}\r\n      <PointLayer\r\n        key={\"3\"}\r\n        options={{\r\n          autoFit: true,\r\n        }}\r\n        source={{\r\n          data: places,\r\n          parser: {\r\n            type: \"json\",\r\n            coordinates: \"centroid\",\r\n          },\r\n        }}\r\n        scale={{\r\n          values: {\r\n            confirmedCount: {\r\n              type: \"log\",\r\n            },\r\n          },\r\n        }}\r\n        color={{\r\n          field: \"output\",\r\n          values: (val) => {\r\n            return val > 1000\r\n              ? \"#AD2310\"\r\n              : val > 700\r\n              ? \"#FF5F4A\"\r\n              : val > 500\r\n              ? \"#FA472F\"\r\n              : val > 300\r\n              ? \"#2FFA97\"\r\n              : \"#00AD58\";\r\n          },\r\n        }}\r\n        shape={{\r\n          // values: \"circle\"\r\n          values: \"hexagon\",\r\n          // values: \"circle\"\r\n        }}\r\n        active={{\r\n          option: {\r\n            color: \"#0c2c84\",\r\n          },\r\n        }}\r\n        size={{\r\n          field: \"input\",\r\n          values: [10, 25],\r\n        }}\r\n        animate={{\r\n          enable: false,\r\n        }}\r\n        style={{\r\n          opacity: 0.8,\r\n        }}\r\n      >\r\n        {/* <LayerEvent type=\"click\" handler={e => console.log(e)} /> */}\r\n        <LayerEvent type=\"click\" handler={(e) => showPopup(e)} />\r\n      </PointLayer>\r\n\r\n      {/* <LayerEvent type=\"click\" handler={(e) => alert(\"hey\")} /> */}\r\n    </MapboxScene>\r\n  );\r\n});\r\n\r\nexport default MapScene;\r\n","import {\r\n  LayerEvent,\r\n  LineLayer,\r\n  MapboxScene,\r\n  Marker,\r\n  PointLayer,\r\n  PolygonLayer,\r\n  Popup,\r\n} from '@antv/l7-react';\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst dataFlyTest = [\r\n  {\r\n    coord: [\r\n      [-74.0337589, 40.7272235],\r\n      [-74.21105069962759, 4.285993532528952],\r\n    ],\r\n  },\r\n  {\r\n    coord: [\r\n      [-60.0337589, 50.7272235],\r\n      [-74.21105069962759, 4.285993532528952],\r\n    ],\r\n  },\r\n  {\r\n    coord: [\r\n      [-98.585522, 39.8333333],\r\n      [-74.21105069962759, 4.285993532528952],\r\n    ],\r\n  },\r\n  {\r\n    coord: [\r\n      [-3.80271911621095,40.3633918762208],\r\n      [-74.21105069962759, 4.285993532528952],\r\n    ],\r\n  },\r\n  {\r\n    coord: [\r\n      [-74.0337589, 40.7272235],\r\n      [-74.044247311, 40.727595966],\r\n    ],\r\n    size: 3,\r\n    key: 1,\r\n  },\r\n  {\r\n    coord: [\r\n      [-74.06762212514877, 40.7253399253558],\r\n      [-74.0337589, 40.7272235],\r\n    ],\r\n    size: 4,\r\n    key: 2,\r\n  },\r\n];\r\n\r\nfunction joinData(geodata: any, ncovData: any) {\r\n  const ncovDataObj: any = {};\r\n  ncovData.forEach((item: any) => {\r\n    const {\r\n      countryName,\r\n      countryEnglishName,\r\n      currentConfirmedCount,\r\n      confirmedCount,\r\n      suspectedCount,\r\n      curedCount,\r\n      deadCount,\r\n    } = item;\r\n    if (countryName === '中国') {\r\n      if (!ncovDataObj[countryName]) {\r\n        ncovDataObj[countryName] = {\r\n          countryName: 0,\r\n          countryEnglishName,\r\n          currentConfirmedCount: 0,\r\n          confirmedCount: 0,\r\n          suspectedCount: 0,\r\n          curedCount: 0,\r\n          deadCount: 0,\r\n        };\r\n      } else {\r\n        ncovDataObj[countryName].currentConfirmedCount += currentConfirmedCount;\r\n        ncovDataObj[countryName].confirmedCount += confirmedCount;\r\n        ncovDataObj[countryName].suspectedCount += suspectedCount;\r\n        ncovDataObj[countryName].curedCount += curedCount;\r\n        ncovDataObj[countryName].deadCount += deadCount;\r\n      }\r\n    } else {\r\n      ncovDataObj[countryName] = {\r\n        countryName,\r\n        countryEnglishName,\r\n        currentConfirmedCount,\r\n        confirmedCount,\r\n        suspectedCount,\r\n        curedCount,\r\n        deadCount,\r\n      };\r\n    }\r\n  });\r\n  const geoObj: any = {};\r\n  geodata.features.forEach((feature: any) => {\r\n    const { name } = feature.properties;\r\n    geoObj[name] = feature.properties;\r\n    const ncov = ncovDataObj[name] || {};\r\n    feature.properties = {\r\n      ...feature.properties,\r\n      ...ncov,\r\n    };\r\n  });\r\n  return geodata;\r\n}\r\n\r\nconst World = React.memo(function Map() {\r\n  const [data, setData] = React.useState();\r\n  const [filldata, setfillData] = React.useState();\r\n  const [popupInfo, setPopupInfo] = React.useState<{\r\n    lnglat: number[];\r\n    feature: any;\r\n  }>();\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [geoData, ncovData] = await Promise.all([\r\n        fetch(\r\n          'https://gw.alipayobjects.com/os/bmw-prod/e62a2f3b-ea99-4c98-9314-01d7c886263d.json',\r\n        ).then((d) => d.json()),\r\n        // https://lab.isaaclin.cn/nCoV/api/area?latest=1\r\n        fetch(\r\n          'https://gw.alipayobjects.com/os/bmw-prod/55a7dd2e-3fb4-4442-8899-900bb03ee67a.json',\r\n        ).then((d) => d.json()),\r\n      ]);\r\n      const worldData = joinData(geoData, ncovData.results);\r\n      const pointdata = worldData.features.map((feature: any) => {\r\n        return feature.properties;\r\n      });\r\n      setfillData(worldData);\r\n      setData(pointdata);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  function showPopup(args: any): void {\r\n    setPopupInfo({\r\n      lnglat: args.lngLat,\r\n      feature: args.feature,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MapboxScene\r\n        map={{\r\n          center: [110.19382669582967, 50.258134],\r\n          pitch: 0,\r\n          style: 'blank',\r\n          zoom: 1,\r\n        }}\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        {popupInfo && (\r\n          <Popup lnglat={popupInfo.lnglat}>\r\n            {popupInfo.feature.name}\r\n            <ul\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              <li>现有确诊:{popupInfo.feature.currentConfirmedCount}</li>\r\n              <li>累计确诊:{popupInfo.feature.confirmedCount}</li>\r\n              <li>治愈:{popupInfo.feature.curedCount}</li>\r\n              <li>死亡:{popupInfo.feature.deadCount}</li>\r\n            </ul>\r\n          </Popup>\r\n        )}\r\n        {data && [\r\n          <PolygonLayer\r\n            key={'1'}\r\n            options={{\r\n              autoFit: false,\r\n            }}\r\n            source={{\r\n              data: filldata,\r\n            }}\r\n            scale={{\r\n              values: {\r\n                confirmedCount: {\r\n                  type: 'quantile',\r\n                },\r\n              },\r\n            }}\r\n            color={{\r\n              values: '#ddd',\r\n            }}\r\n            shape={{\r\n              values: 'fill',\r\n            }}\r\n            style={{\r\n              opacity: 1,\r\n            }}\r\n          />,\r\n          <LineLayer\r\n            key={'3'}\r\n            source={{\r\n              data: filldata,\r\n            }}\r\n            size={{\r\n              values: 0.6,\r\n            }}\r\n            color={{\r\n              values: '#fff',\r\n            }}\r\n            shape={{\r\n              values: 'line',\r\n            }}\r\n            style={{\r\n              opacity: 1,\r\n            }}\r\n          />,\r\n          <LineLayer\r\n          key={\"0\"}\r\n          source={{\r\n            data: dataFlyTest,\r\n            \r\n            parser: {\r\n              type: \"json\",\r\n              coordinates: \"coord\",\r\n              // key: \"key\",\r\n            },\r\n          }}\r\n          size={{\r\n            values: 2,\r\n          }}\r\n          color={{\r\n            field: \"startToEnd*endToStart\",\r\n            values: (start, end) => {\r\n                return \"#AD2310\";\r\n            },\r\n  \r\n            // values: \"#8C1EB2\",\r\n          }}\r\n          shape={{\r\n            values: \"arc3d\",\r\n          }}\r\n          active={{ option: true }}\r\n          style={{\r\n            opacity: 1,\r\n          }}\r\n          // animate={{\r\n          //   enable: false,\r\n          //   interval: 1,\r\n          //   trailLength: 1.5,\r\n          //   duration: 2,\r\n          //   speed: 3\r\n          // }}\r\n          animate={{\r\n            enable: true,\r\n            trailLength: 1.2,\r\n            interval: 0.5,\r\n            duration: 7,\r\n          }}\r\n        >\r\n        </LineLayer>\r\n  \r\n\r\n\r\n          // <PointLayer\r\n          //   key={'2'}\r\n          //   options={{\r\n          //     autoFit: true,\r\n          //   }}\r\n          //   source={{\r\n          //     data,\r\n          //     parser: {\r\n          //       type: 'json',\r\n          //       coordinates: 'centroid',\r\n          //     },\r\n          //   }}\r\n          //   scale={{\r\n          //     values: {\r\n          //       confirmedCount: {\r\n          //         type: 'log',\r\n          //       },\r\n          //     },\r\n          //   }}\r\n          //   color={{\r\n          //     values: '#b10026',\r\n          //   }}\r\n          //   shape={{\r\n          //     values: 'circle',\r\n          //   }}\r\n          //   active={{\r\n          //     option: {\r\n          //       color: '#0c2c84',\r\n          //     },\r\n          //   }}\r\n          //   size={{\r\n          //     field: 'confirmedCount',\r\n          //     values: [5, 60],\r\n          //   }}\r\n          //   animate={{\r\n          //     enable: true,\r\n          //   }}\r\n          //   style={{\r\n          //     opacity: 0.6,\r\n          //   }}\r\n          // >\r\n          //   <LayerEvent type=\"mousemove\" handler={showPopup} />\r\n          // </PointLayer>,\r\n        ]}\r\n      </MapboxScene>\r\n    </>\r\n  );\r\n});\r\nexport default World\r\n// ReactDOM.render(<World />, document.getElementById('map'));","import React from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport { avergayByDayOfWeek, getAmmountByDay, getPlaces } from \"../utils\";\r\nimport BarChart from \"../components/charts/Bar\";\r\nimport HorizontalBar from \"../components/charts/HorizontalBar\";\r\nimport Rose from \"../components/charts/Rose\";\r\nimport data from \"../data/citybike/bike_2020_03-.json\";\r\nimport Map from \"../components/charts/map/Map\";\r\nimport MapBox from \"../components/charts/map/MapBox\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst ds = new DataSet();\r\nconst Citibike = () => {\r\n  /*\r\n    @ammountsByDay:  Cantidad de viajes por día\r\n    @ammountsByDay:  Promedio de viajes dependiendo del día L-M-W-J-V-S-D\r\n    @CurrentDay:     Día actual, funciona para filtrar los días en el grafico de barras\r\n    @dataMap:        Variable que contiene todos los lugares y los lados que posteriormente se ponen en el mapa\r\n    @edgesFilter:        Variable que contiene los lados una vez se le da click al respectivo nodo (lugar)\r\n  */\r\n  const [ammountsByDay, setAmmount] = React.useState(\r\n    ds.createView().source(getAmmountByDay(data))\r\n  );\r\n\r\n  const [average, setAverage] = React.useState(\r\n    avergayByDayOfWeek(getAmmountByDay(data))\r\n  );\r\n  const [currentDay, setCurrentDay] = React.useState(\"All\");\r\n\r\n  function resetBar() {\r\n    setAmmount(ds.createView().source(getAmmountByDay(data)));\r\n  }\r\n  const [dataMap, setDataMap] = React.useState(getPlaces(data));\r\n  const [edgesFilter, setEdgesFilter] = React.useState([]);\r\n  const [currentStation, setCurrentStation] = React.useState([]);\r\n\r\n  function filterAmmout(e) {\r\n    if (e.data === null || e.data === undefined) {\r\n      resetBar();\r\n      setCurrentDay(\"All\");\r\n    } else {\r\n      if (e.data.data !== undefined) {\r\n        const dv = ds.createView().source(getAmmountByDay(data));\r\n        dv.transform({\r\n          type: \"filter\",\r\n          callback(row) {\r\n            return row.type === parseInt(e.data.data.number);\r\n          },\r\n        });\r\n        setAmmount(dv);\r\n        setCurrentDay(e.data.data.name);\r\n      }\r\n    }\r\n  }\r\n  // console.log(getPlaces(data))\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          Para resetear el grafico de barras se debe dar click en un espacio en\r\n          blanco en el grafico de promedio por día de la semana.\r\n        </li>\r\n      </ul>\r\n      <Row gutter={[15, 15]}>\r\n        <Col span=\"12\">\r\n          <Rose data={average} filter={filterAmmout} />\r\n        </Col>\r\n        <Col span=\"12\">\r\n          <BarChart key=\"barchar\" data={ammountsByDay.rows} day={currentDay} />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[10, 10]}>\r\n        <Col span=\"14\">\r\n          <Card bodyStyle={{ minHeight: 600 }}>\r\n            <Map\r\n              places={dataMap.placeArray}\r\n              lines={dataMap.edges}\r\n              edgeFilterProp={setEdgesFilter}\r\n              setCurrentStation={setCurrentStation}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span=\"10\">\r\n          <Card\r\n            bodyStyle={{ minHeight: 300 }}\r\n            size=\"small\"\r\n          >\r\n            <HorizontalBar data={edgesFilter} currentStation={currentStation} />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[10, 10]}>\r\n        <Col span=\"16\">\r\n          <Card bodyStyle={{ minHeight: 600 }}>{/* <MapBox  /> */}</Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Citibike;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  DashboardTwoTone,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst customSider = ({ collapsed }) => {\r\n  return (\r\n    <Sider trigger={null} collapsible collapsed={collapsed}>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n        <Menu.Item key=\"1\" onClick={null}>\r\n          <Link to=\"/\">\r\n            <UserOutlined />\r\n            <span>introducción</span>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" onClick={null}>\r\n          <Link to=\"/citybike\">\r\n            <span>\r\n              <DashboardTwoTone /> <span>Dashboard citibyke </span>\r\n            </span>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n          nav 3\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default customSider;\r\n","import React from \"react\";\r\nimport \"./styles/sider.css\";\r\nimport Introduction from \"./views/Introduction\";\r\nimport Citybike from \"./views/Citybike\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Sider from \"./components/general/Sider\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Header, Content } = Layout;\r\nconst Routes = () => {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n\r\n  const Toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Layout>\r\n        <Sider collapsed={collapsed} />\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(\r\n              collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n              {\r\n                className: \"trigger\",\r\n                onClick: Toggle,\r\n              }\r\n            )}\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"15px 16px\",\r\n              padding: 20,\r\n              minHeight: 768,\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/citybike\" component={Citybike} />\r\n              <Route exact path=\"/*\" component={Introduction} />\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Router from \"./Router\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Router />\r\n  // </React.StrictMode>,\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}